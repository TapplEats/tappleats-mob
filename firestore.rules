rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /invitations/{invitationId} {
    	//allow read: if request.auth.uid != null;
    	allow read;
      allow write;
      allow create;
    }
    match /patches/{patchId} {
    	//allow read: if request.auth.uid != null;
    	allow read;
      allow write;
      allow create;
    }
    match /counter/{counterId} {
    	allow read;
      allow write;
      allow create;
    }
    match /orders/{orderId} {
    	allow read;
      allow write;
      allow create;
    }
    match /orders/{orderId} {
    	allow read;
      allow write;
      allow create;
    }
  	match /cards/{cardId} {
    	//allow read: if request.auth.uid != null;
    	allow read;
      allow write: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
      allow update: if (request.resource.data.diff(resource.data).affectedKeys()
        .hasOnly(['connections', 'links', 'offerTags', 'offers']));
    }
    match /users/{userId} {
      allow create:  if request.auth.uid != null || request.auth.token.claims.superAdmin == true;
      allow write: if request.auth.token.claims.superAdmin == true || request.auth.uid == request.resource.data.settings.masterId || request.auth.uid == userId;
      //allow read: if request.auth.uid == userId || request.auth.token.claims.superAdmin == true;
      allow read;
    }
    match /offers/{cardId} {
    	allow read;
      allow write: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
      allow update: if request.auth.uid != null;
    }
    match /menus/{menuId}{
    	//allow read: if request.auth.uid != null;
    	allow read;
      allow write: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
      allow update: if request.auth.uid != null;
    }
  }
}
